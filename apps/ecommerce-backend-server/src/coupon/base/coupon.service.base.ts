/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Coupon as PrismaCoupon } from "@prisma/client";

export class CouponServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CouponCountArgs, "select">): Promise<number> {
    return this.prisma.coupon.count(args);
  }

  async coupons(args: Prisma.CouponFindManyArgs): Promise<PrismaCoupon[]> {
    return this.prisma.coupon.findMany(args);
  }
  async coupon(
    args: Prisma.CouponFindUniqueArgs
  ): Promise<PrismaCoupon | null> {
    return this.prisma.coupon.findUnique(args);
  }
  async createCoupon(args: Prisma.CouponCreateArgs): Promise<PrismaCoupon> {
    return this.prisma.coupon.create(args);
  }
  async updateCoupon(args: Prisma.CouponUpdateArgs): Promise<PrismaCoupon> {
    return this.prisma.coupon.update(args);
  }
  async deleteCoupon(args: Prisma.CouponDeleteArgs): Promise<PrismaCoupon> {
    return this.prisma.coupon.delete(args);
  }
}
