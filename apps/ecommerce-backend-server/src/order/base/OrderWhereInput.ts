/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { OrderItemWhereUniqueInput } from "../../orderItem/base/OrderItemWhereUniqueInput";
import { PaymentWhereUniqueInput } from "../../payment/base/PaymentWhereUniqueInput";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { ReturnRequestWhereUniqueInput } from "../../returnRequest/base/ReturnRequestWhereUniqueInput";
import { ReturnRequestListRelationFilter } from "../../returnRequest/base/ReturnRequestListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";

@InputType()
class OrderWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => OrderItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderItemWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderItemWhereUniqueInput, {
    nullable: true,
  })
  orderItem?: OrderItemWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PaymentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PaymentWhereUniqueInput)
  @IsOptional()
  @Field(() => PaymentWhereUniqueInput, {
    nullable: true,
  })
  payment?: PaymentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payments?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReturnRequestWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ReturnRequestWhereUniqueInput)
  @IsOptional()
  @Field(() => ReturnRequestWhereUniqueInput, {
    nullable: true,
  })
  returnRequest?: ReturnRequestWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ReturnRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReturnRequestListRelationFilter)
  @IsOptional()
  @Field(() => ReturnRequestListRelationFilter, {
    nullable: true,
  })
  returnRequests?: ReturnRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  users?: UserListRelationFilter;
}

export { OrderWhereInput as OrderWhereInput };
