/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BrandWhereUniqueInput } from "../../brand/base/BrandWhereUniqueInput";

import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
  IsBoolean,
  IsNumber,
  Min,
  Max,
} from "class-validator";

import { Type } from "class-transformer";
import { CartItemWhereUniqueInput } from "../../cartItem/base/CartItemWhereUniqueInput";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { EnumProductColors } from "./EnumProductColors";
import { EnumProductImages } from "./EnumProductImages";
import { OrderItemWhereUniqueInput } from "../../orderItem/base/OrderItemWhereUniqueInput";
import { ReviewUpdateManyWithoutProductsInput } from "./ReviewUpdateManyWithoutProductsInput";
import { EnumProductSizes } from "./EnumProductSizes";
import { WishlistUpdateManyWithoutProductsInput } from "./WishlistUpdateManyWithoutProductsInput";

@InputType()
class ProductUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BrandWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BrandWhereUniqueInput)
  @IsOptional()
  @Field(() => BrandWhereUniqueInput, {
    nullable: true,
  })
  brand?: BrandWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CartItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CartItemWhereUniqueInput)
  @IsOptional()
  @Field(() => CartItemWhereUniqueInput, {
    nullable: true,
  })
  cartItem?: CartItemWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumProductColors,
    isArray: true,
  })
  @IsEnum(EnumProductColors, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductColors], {
    nullable: true,
  })
  colors?: Array<"Option1">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumProductImages,
    isArray: true,
  })
  @IsEnum(EnumProductImages, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductImages], {
    nullable: true,
  })
  images?: Array<"Option1">;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  inStock?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => OrderItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderItemWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderItemWhereUniqueInput, {
    nullable: true,
  })
  orderItem?: OrderItemWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  reviews?: ReviewUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    enum: EnumProductSizes,
    isArray: true,
  })
  @IsEnum(EnumProductSizes, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductSizes], {
    nullable: true,
  })
  sizes?: Array<"Option1">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => WishlistUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => WishlistUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => WishlistUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  wishlists?: WishlistUpdateManyWithoutProductsInput;
}

export { ProductUpdateInput as ProductUpdateInput };
